This is a library for Reed-Solomon coding that is designed to be used
with an NVIDIA GPU, preferably with compute capability 1.3 or later.
It includes two sample programs found in the examples directory.

To build a unified version, simply issue "make". This will build a
version that includes functionality for all three backends: CUDA,
Jerasure, and a slow CPU reference. Your CPPFLAGS and LDFLAGS should
have the compiler directives necessary to find your CUDA include files
and library files, respectively.

To use the GPU functions, two environment variables have to be defined:

- GIB_CACHE_DIR: This is where compiled GPU code goes.  This directory
  should not be publicly accessible and should exist.  A typical value
  is the "ptx" directory within Gibraltar's directory.

- GIB_SRC_DIR: This is where the source to the kernel lives.  The
  typical value of this is the "src" directory within Gibraltar's
  directory.

Ensure that, when running Gibraltar applications, nvcc is available
via the PATH environment variable.

Optionally, if more than one CUDA GPU exists on the system, use
"GIB_GPU_ID" to tell it which to use.  Use a number between 0 and
MAX-1.

By default, a compute context 1.3 or greater GPU is assumed.  If this
is not the case, define GIB_USE_MMAP to be 0.


# TODO
* Rename N to MAX_GEMM_M, rename M to "MAX_GEMM_N" (for BLAS-speak).
* Rename gib_cuda_checksum.cu to something better.
